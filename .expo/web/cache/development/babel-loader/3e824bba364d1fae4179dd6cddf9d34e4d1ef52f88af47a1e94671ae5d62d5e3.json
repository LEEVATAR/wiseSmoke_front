{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setIsModalVisible = _useState2[1];\n  var handleGoogleLogin = function handleGoogleLogin() {\n    setIsModalVisible(true);\n  };\n  var handleKakaoLogin = function handleKakaoLogin() {\n    setIsModalVisible(true);\n  };\n  var handleNaverLogin = function handleNaverLogin() {\n    setIsModalVisible(true);\n  };\n  var closeModal = function closeModal() {\n    setIsModalVisible(false);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.loginButton,\n      onPress: handleGoogleLogin,\n      children: _jsx(Text, {\n        style: styles.loginButtonText,\n        children: \"\\uAD6C\\uAE00 \\uB85C\\uADF8\\uC778\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginButton,\n      onPress: handleKakaoLogin,\n      children: _jsx(Text, {\n        style: styles.loginButtonText,\n        children: \"\\uCE74\\uCE74\\uC624 \\uB85C\\uADF8\\uC778\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginButton,\n      onPress: handleNaverLogin,\n      children: _jsx(Text, {\n        style: styles.loginButtonText,\n        children: \"\\uB124\\uC774\\uBC84 \\uB85C\\uADF8\\uC778\"\n      })\n    }), _jsx(Modal, {\n      visible: isModalVisible,\n      animationType: \"slide\",\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsx(Text, {\n          children: \"\\uB85C\\uADF8\\uC778 \\uBAA8\\uB2EC \\uB0B4\\uC6A9\"\n        }), _jsx(TouchableOpacity, {\n          onPress: closeModal,\n          children: _jsx(Text, {\n            children: \"\\uB2EB\\uAE30\"\n          })\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  loginButton: {\n    backgroundColor: '#4285F4',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    marginBottom: 12\n  },\n  loginButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  modalContent: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TouchableOpacity","Modal","jsx","_jsx","jsxs","_jsxs","Login","_useState","_useState2","_slicedToArray","isModalVisible","setIsModalVisible","handleGoogleLogin","handleKakaoLogin","handleNaverLogin","closeModal","style","styles","container","children","loginButton","onPress","loginButtonText","visible","animationType","modalContent","create","flex","backgroundColor","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","marginBottom","color","fontSize","fontWeight"],"sources":["/Users/sojaeyeon/Desktop/ToyProject/expo/wiseSmoke_front/src/login/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Modal } from 'react-native';\n\nexport default function Login() {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const handleGoogleLogin = () => {\n    setIsModalVisible(true);\n    // 구글 로그인 모달 띄우기\n  };\n\n  const handleKakaoLogin = () => {\n    setIsModalVisible(true);\n    // 카카오 로그인 모달 띄우기\n  };\n\n  const handleNaverLogin = () => {\n    setIsModalVisible(true);\n    // 네이버 로그인 모달 띄우기\n  };\n\n  const closeModal = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity style={styles.loginButton} onPress={handleGoogleLogin}>\n        <Text style={styles.loginButtonText}>구글 로그인</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.loginButton} onPress={handleKakaoLogin}>\n        <Text style={styles.loginButtonText}>카카오 로그인</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.loginButton} onPress={handleNaverLogin}>\n        <Text style={styles.loginButtonText}>네이버 로그인</Text>\n      </TouchableOpacity>\n\n      <Modal visible={isModalVisible} animationType=\"slide\">\n        {/* 로그인 모달 내용 */}\n        <View style={styles.modalContent}>\n          {/* 로그인 모달 내용 구현 */}\n          <Text>로그인 모달 내용</Text>\n          <TouchableOpacity onPress={closeModal}>\n            <Text>닫기</Text>\n          </TouchableOpacity>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  loginButton: {\n    backgroundColor: '#4285F4',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    marginBottom: 12,\n  },\n  loginButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  modalContent: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}