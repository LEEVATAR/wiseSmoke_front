{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedLogin = _useState2[0],\n    setSelectedLogin = _useState2[1];\n  var handleLoginSelection = function handleLoginSelection(loginType) {\n    setSelectedLogin(loginType);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \" \\uC704\\uC5D0\\uB294 \\uB85C\\uACE0\\uB97C \\uB123\\uC744\\uAC81\\uB2C8\\uB2E4. \"\n    }), _jsx(TouchableOpacity, {\n      style: styles.naverLoginButton,\n      onPress: function onPress() {\n        return handleLoginSelection('naver');\n      },\n      children: _jsx(Image, {\n        source: require(\"../image/naver.png\"),\n        style: styles.loginButtonImage,\n        resizeMode: \"cover\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.kakaoLoginButton,\n      onPress: function onPress() {\n        return handleLoginSelection('kakao');\n      },\n      children: _jsx(Image, {\n        source: require(\"../image/kakao.png\"),\n        style: styles.loginButtonImage,\n        resizeMode: \"cover\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.googleLoginButton,\n      onPress: function onPress() {\n        return handleLoginSelection('google');\n      },\n      children: _jsx(Image, {\n        source: require(\"../image/google.png\"),\n        style: styles.loginButtonImage,\n        resizeMode: \"cover\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  naverLoginButton: {\n    marginBottom: 12\n  },\n  kakaoLoginButton: {\n    marginBottom: 12\n  },\n  googleLoginButton: {\n    marginBottom: 12\n  },\n  loginButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  loginButtonImage: {\n    borderRadius: 8,\n    width: 170,\n    height: 40\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TouchableOpacity","Image","jsx","_jsx","jsxs","_jsxs","Login","_useState","_useState2","_slicedToArray","selectedLogin","setSelectedLogin","handleLoginSelection","loginType","style","styles","container","children","naverLoginButton","onPress","source","require","loginButtonImage","resizeMode","kakaoLoginButton","googleLoginButton","create","flex","backgroundColor","alignItems","justifyContent","marginBottom","loginButtonText","color","fontSize","fontWeight","borderRadius","width","height"],"sources":["/Users/sojaeyeon/Desktop/ToyProject/expo/wiseSmoke_front/src/login/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\n\nexport default function Login() {\n  const [selectedLogin, setSelectedLogin] = useState('');\n\n  // 누르는 버튼에 따라 어떤 방식으로 로그인 하는지 구분\n  const handleLoginSelection = (loginType) => {\n    setSelectedLogin(loginType);\n  };\n\n  return (\n    <View style={styles.container}>\n\n      <Text> 위에는 로고를 넣을겁니다. </Text>\n\n      <TouchableOpacity style={styles.naverLoginButton} onPress={() => handleLoginSelection('naver')}>\n        <Image source={require('../image/naver.png')} style={styles.loginButtonImage} resizeMode=\"cover\" />\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.kakaoLoginButton} onPress={() => handleLoginSelection('kakao')}>\n        <Image source={require('../image/kakao.png')} style={styles.loginButtonImage} resizeMode=\"cover\" />\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.googleLoginButton} onPress={() => handleLoginSelection('google')}>\n        <Image source={require('../image/google.png')} style={styles.loginButtonImage} resizeMode=\"cover\" />\n      </TouchableOpacity>\n\n \n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  naverLoginButton: { // 버튼은 클릭 시 이벤트 및 이미지 액자\n    marginBottom: 12,\n  },\n  kakaoLoginButton: {\n    marginBottom: 12,\n  },\n  googleLoginButton: {\n    marginBottom: 12,\n  },\n  loginButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  loginButtonImage: {\n    borderRadius: 8, // 둥근 효과\n    width: 170, // 이미지 너비 조절\n    height: 40, // 이미지 높이 조절\n  }\n});\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAC9B,IAAAC,SAAA,GAA0CX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAGtC,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,SAAS,EAAK;IAC1CF,gBAAgB,CAACE,SAAS,CAAC;EAC7B,CAAC;EAED,OACER,KAAA,CAACN,IAAI;IAACe,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAE5Bd,IAAA,CAACL,IAAI;MAAAmB,QAAA,EAAC;IAAgB,CAAM,CAAC,EAE7Bd,IAAA,CAACH,gBAAgB;MAACc,KAAK,EAAEC,MAAM,CAACG,gBAAiB;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMP,oBAAoB,CAAC,OAAO,CAAC;MAAA,CAAC;MAAAK,QAAA,EAC7Fd,IAAA,CAACF,KAAK;QAACmB,MAAM,EAAEC,OAAO,qBAAqB,CAAE;QAACP,KAAK,EAAEC,MAAM,CAACO,gBAAiB;QAACC,UAAU,EAAC;MAAO,CAAE;IAAC,CACnF,CAAC,EACnBpB,IAAA,CAACH,gBAAgB;MAACc,KAAK,EAAEC,MAAM,CAACS,gBAAiB;MAACL,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMP,oBAAoB,CAAC,OAAO,CAAC;MAAA,CAAC;MAAAK,QAAA,EAC7Fd,IAAA,CAACF,KAAK;QAACmB,MAAM,EAAEC,OAAO,qBAAqB,CAAE;QAACP,KAAK,EAAEC,MAAM,CAACO,gBAAiB;QAACC,UAAU,EAAC;MAAO,CAAE;IAAC,CACnF,CAAC,EACnBpB,IAAA,CAACH,gBAAgB;MAACc,KAAK,EAAEC,MAAM,CAACU,iBAAkB;MAACN,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMP,oBAAoB,CAAC,QAAQ,CAAC;MAAA,CAAC;MAAAK,QAAA,EAC/Fd,IAAA,CAACF,KAAK;QAACmB,MAAM,EAAEC,OAAO,sBAAsB,CAAE;QAACP,KAAK,EAAEC,MAAM,CAACO,gBAAiB;QAACC,UAAU,EAAC;MAAO,CAAE;IAAC,CACpF,CAAC;EAAA,CAGf,CAAC;AAEX;AAEA,IAAMR,MAAM,GAAGlB,UAAU,CAAC6B,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDZ,gBAAgB,EAAE;IAChBa,YAAY,EAAE;EAChB,CAAC;EACDP,gBAAgB,EAAE;IAChBO,YAAY,EAAE;EAChB,CAAC;EACDN,iBAAiB,EAAE;IACjBM,YAAY,EAAE;EAChB,CAAC;EACDC,eAAe,EAAE;IACfC,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDb,gBAAgB,EAAE;IAChBc,YAAY,EAAE,CAAC;IACfC,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}