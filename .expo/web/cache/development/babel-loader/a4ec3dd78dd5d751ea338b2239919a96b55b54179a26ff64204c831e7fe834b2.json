{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setIsModalVisible = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedLogin = _useState4[0],\n    setSelectedLogin = _useState4[1];\n  var handleLoginSelection = function handleLoginSelection(loginType) {\n    setIsModalVisible(true);\n    setSelectedLogin(loginType);\n  };\n  var closeModal = function closeModal() {\n    setIsModalVisible(false);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.loginButton,\n      onPress: function onPress() {\n        return handleLoginSelection('google');\n      },\n      children: _jsx(Text, {\n        style: styles.loginButtonText,\n        children: \"\\uAD6C\\uAE00 \\uB85C\\uADF8\\uC778\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginButton,\n      onPress: function onPress() {\n        return handleLoginSelection('kakao');\n      },\n      children: _jsx(Text, {\n        style: styles.loginButtonText,\n        children: \"\\uCE74\\uCE74\\uC624 \\uB85C\\uADF8\\uC778\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginButton,\n      onPress: function onPress() {\n        return handleLoginSelection('naver');\n      },\n      children: _jsx(Text, {\n        style: styles.loginButtonText,\n        children: \"\\uB124\\uC774\\uBC84 \\uB85C\\uADF8\\uC778\"\n      })\n    }), _jsx(Modal, {\n      visible: isModalVisible,\n      animationType: \"slide\",\n      children: _jsxs(View, {\n        style: styles.modalContent,\n        children: [_jsxs(Text, {\n          children: [\"\\uC120\\uD0DD\\uD55C \\uB85C\\uADF8\\uC778 \\uBC29\\uC2DD: \", selectedLogin]\n        }), _jsx(TouchableOpacity, {\n          onPress: closeModal,\n          children: _jsx(Text, {\n            children: \"\\uB2EB\\uAE30\"\n          })\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  loginButton: {\n    backgroundColor: '#4285F4',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    marginBottom: 12\n  },\n  loginButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  modalContent: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TouchableOpacity","Modal","jsx","_jsx","jsxs","_jsxs","Login","_useState","_useState2","_slicedToArray","isModalVisible","setIsModalVisible","_useState3","_useState4","selectedLogin","setSelectedLogin","handleLoginSelection","loginType","closeModal","style","styles","container","children","loginButton","onPress","loginButtonText","visible","animationType","modalContent","create","flex","backgroundColor","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","marginBottom","color","fontSize","fontWeight"],"sources":["/Users/sojaeyeon/Desktop/ToyProject/expo/wiseSmoke_front/src/login/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Modal } from 'react-native';\n\nexport default function Login() {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [selectedLogin, setSelectedLogin] = useState('');\n\n  // 누르는 버튼에 따라 어떤 방식으로 로그인 하는지 구분\n  const handleLoginSelection = (loginType) => {\n    setIsModalVisible(true);\n    setSelectedLogin(loginType);\n  };\n\n  const closeModal = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity style={styles.loginButton} onPress={() => handleLoginSelection('google')}>\n        <Text style={styles.loginButtonText}>구글 로그인</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.loginButton} onPress={() => handleLoginSelection('kakao')}>\n        <Text style={styles.loginButtonText}>카카오 로그인</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.loginButton} onPress={() => handleLoginSelection('naver')}>\n        <Text style={styles.loginButtonText}>네이버 로그인</Text>\n      </TouchableOpacity>\n\n      <Modal visible={isModalVisible} animationType=\"slide\">\n        {/* 로그인 모달 내용 */}\n        <View style={styles.modalContent}>\n          <Text>선택한 로그인 방식: {selectedLogin}</Text>\n          <TouchableOpacity onPress={closeModal}>\n            <Text>닫기</Text>\n          </TouchableOpacity>\n        </View>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  loginButton: {\n    backgroundColor: '#4285F4',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    marginBottom: 12,\n  },\n  loginButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  modalContent: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}